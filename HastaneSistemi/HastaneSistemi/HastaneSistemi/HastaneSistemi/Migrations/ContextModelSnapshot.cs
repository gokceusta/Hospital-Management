// <auto-generated />
using HastaneSistemi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HastaneSistemi.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HastaneSistemi.Models.Doktor", b =>
                {
                    b.Property<int>("DoktorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoktorID"), 1L, 1);

                    b.Property<string>("DoktorAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoktorSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PoliklinikID")
                        .HasColumnType("int");

                    b.HasKey("DoktorID");

                    b.HasIndex("PoliklinikID");

                    b.ToTable("Doktors");
                });

            modelBuilder.Entity("HastaneSistemi.Models.Hasta", b =>
                {
                    b.Property<int>("HastaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HastaID"), 1L, 1);

                    b.Property<string>("HastAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HastaID");

                    b.ToTable("Hastas");
                });

            modelBuilder.Entity("HastaneSistemi.Models.Hesap", b =>
                {
                    b.Property<int>("HesapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HesapID"), 1L, 1);

                    b.Property<string>("HesapMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HesapSifre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HesapID");

                    b.ToTable("Hesaps");
                });

            modelBuilder.Entity("HastaneSistemi.Models.Kayit", b =>
                {
                    b.Property<int>("HesapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HesapID"), 1L, 1);

                    b.Property<string>("HesapAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HesapMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HesapSifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HesapSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HesapID");

                    b.ToTable("Kayits");
                });

            modelBuilder.Entity("HastaneSistemi.Models.Poliklinik", b =>
                {
                    b.Property<int>("PoliklinikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PoliklinikID"), 1L, 1);

                    b.Property<string>("PoliklinikAd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PoliklinikID");

                    b.ToTable("Polikliniks");
                });

            modelBuilder.Entity("HastaneSistemi.Models.Randevu", b =>
                {
                    b.Property<int>("RandevuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandevuID"), 1L, 1);

                    b.Property<int>("DoktorID")
                        .HasColumnType("int");

                    b.Property<int>("HastaID")
                        .HasColumnType("int");

                    b.Property<string>("RandevuGun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RandevuSaat")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("RandevuID");

                    b.HasIndex("DoktorID");

                    b.HasIndex("HastaID");

                    b.ToTable("Randevus");
                });

            modelBuilder.Entity("HastaneSistemi.Models.Doktor", b =>
                {
                    b.HasOne("HastaneSistemi.Models.Poliklinik", "Poliklinik")
                        .WithMany("Doktors")
                        .HasForeignKey("PoliklinikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poliklinik");
                });

            modelBuilder.Entity("HastaneSistemi.Models.Randevu", b =>
                {
                    b.HasOne("HastaneSistemi.Models.Doktor", "Doktor")
                        .WithMany("Randevus")
                        .HasForeignKey("DoktorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HastaneSistemi.Models.Hasta", "Hasta")
                        .WithMany("Randevus")
                        .HasForeignKey("HastaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doktor");

                    b.Navigation("Hasta");
                });

            modelBuilder.Entity("HastaneSistemi.Models.Doktor", b =>
                {
                    b.Navigation("Randevus");
                });

            modelBuilder.Entity("HastaneSistemi.Models.Hasta", b =>
                {
                    b.Navigation("Randevus");
                });

            modelBuilder.Entity("HastaneSistemi.Models.Poliklinik", b =>
                {
                    b.Navigation("Doktors");
                });
#pragma warning restore 612, 618
        }
    }
}
